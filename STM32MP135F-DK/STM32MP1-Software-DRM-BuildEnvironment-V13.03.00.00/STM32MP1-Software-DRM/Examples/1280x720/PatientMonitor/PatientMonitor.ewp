$version 13.00

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,70,240,110>
unit Core
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,110,240,150>
unit Resources
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,150,240,190>
unit Graphics
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,190,240,230>
unit Effects
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,230,240,270>
unit Views
{
  attr Directory = $Mosaic;
}

// The 'default' Language. Each project has to contain at least one language brick \
// called 'Default'
$rect <540,70,740,110>
language Default;

// This unit is intended to contain the application class and other GUI components.
$rect <40,430,240,470>
unit Application
{
  attr Directory = .\;
}

// Mosaic Framework
note group Note1
{
  attr Bounds = <20,20,260,370>;
}

// Profile Configuration
note group Note2
{
  attr Bounds = <270,20,510,130>;
}

// Languages
note group Note3
{
  attr Bounds = <520,20,760,130>;
}

// Project Units
note group Note5
{
  attr Bounds = <20,380,260,530>;
}

// Welcome to the Patient Monitor Demo!
// 
// Patient monitors are generally used to display and monitor the physiological parameters \
// of a patient. Typically monitored values are the heart rhythm (ECG), blood pressure \
// (ABP), oxygen saturation (SpO2), carbon dioxide content in the exhaled air (etCO2) \
// and the body temperature.
// This demo is focused on the presentation of continuous measured data in an overwriting \
// data recorder (like an oscilloscope).
// The data graphs of the (simulated) measured values and the dialogs for user settings \
// are presented in a modern clean medical style (with support of day and night mode). \
// Dialogs are using blur filter to show the content behind with a glass effect. \
// The control items are implemented using the widgets.
// 
// You can double-click on the 'Application' or 'Monitor' bricks to open the unit \
// within the Composer and to analyze the implementation.
// 
// To start the application within the Prototyper, press 'Ctrl'+'F5'.
note legend Note
{
  attr Bounds = <270,140,760,530>;
}

$rect <40,470,240,510>
unit Monitor
{
  attr Directory = .\;
}

$rect <40,270,240,310>
unit Templates
{
  attr Directory = $Mosaic\;
}

$rect <40,310,240,350>
unit WidgetSet
{
  attr Directory = $Mosaic\;
}

// This is a profile member for the project. This profile controls the code generation \
// for the target system.
$rect <290,70,490,110>
profile Linux : Linux.Software.RGBA8888
{
  attr ScreenSize = <1280,720>;
  attr Optimization = High;
  attr ApplicationClass = Application::Application;
  attr OutputDirectory = ..\..\..\Application\GeneratedCode;
  attr CleanOutputDirectories = true;
  attr FontConversion = Windows;
  attr OutputFileNameExtension = c;
  attr Verbose = false;

  $rect <10,10,154,50>
  macro Author = "Dipl. Ing. Paul Banach and Dipl. Ing. Manfred Schweyer, Copyright (C) TARA Systems GmbH";

  $rect <10,60,210,100>
  macro BlurRadius = 4;
}
